**************************************************************************
** title:      Zones
** author:     Brian Frank
** created:    20 Apr 2021
** copyright:  Copyright (c) 2021, Project-Haystack
**************************************************************************

Overview [#overview]
********************
This chapter provides the details for modeling zones and their associated
sensors and setpoints.  See the `Spaces#zones` chapter for an introduction
to how zones are modeled as a subtype of space.

Occupancy [#occupancy]
**********************
Determining and controlling occupancy is one of the most critical aspects
of building automation.  Haystack defines several occupancy related tags
and points:

  - `occupied` `sp`: setpoint true when occupied, false when unoccupied
  - `occupied` `sensor`: boolean sensor true when occupied, false when unoccupied
  - `occupancy` `sensor`: people counter that measures number of occupants
  - `occ`: marker tag is used on points for occupancy modes
  - `unocc`: marker tag is used on points for occupancy modes
  - `occupants`: the people who occupy a space

The primary tag used for the occupied/unoccupied state is the `occupied` tag.
In most cases, the occupied setpoint is a schedule that determines occupancy
based on the time of day and day of the week.  We might also use a sensor
like a motion sensor to determine occupancy. More sophisticated sensors can
actually count the number of people in a space; in which case, we use the `occupancy`
tag.  As a general rule: points with the `occupied` tag should have
a 'Bool' kind; points with the `occupancy` tag should have a 'Number' kind.

The `occ` and `unocc` tags are used in cases when we need to distinguish
modes.  For example, if we have two different temperature setpoints based
on the occupancy mode, then we distinguish them as 'occ temp sp'
and 'unocc temp sp'.

HVAC [#hvac]
************
The `hvac-zone-space` conjunct models an HVAC zone for the conditioning
of space comfort and air quality.  The `hvacZonePoints` def enumerates
the common points used for HVAC control of a space.

The sensor and setpoints associated with temperature control include:

  - `hvacMode` `sp`: current mode such as "cooling" or "heating"
  - `temp` `sensor`: actual sensed temperature of the space
  - `temp` `occ` `cooling` `sp`: cooling setpoint when occupied
  - `temp` `occ` `heating` `sp`: heating setpoint when occupied
  - `temp` `unocc` `cooling` `sp`: cooling setpoint when unoccupied
  - `temp` `unocc` `heating` `sp`: heating setpoint when unoccupied
  - `temp` `standby` `cooling` `sp`: cooling setpoint when in standby mode
  - `temp` `standby` `heating` `sp`: heating setpoint when in standby mode
  - `temp` `effective` `sp`: current setpoint we are controlling to taking
    into account cooling/heating mode and occ/unocc/standby mode

Whenever possible, there should be one effective temperature setpoint
that takes all the various modes into account.  This provides the simplest
model to perform analysis of HVAC operations.  However in some cases
a thermostat will provide two effective setpoints - one for cooling
and one for heating.  In this case, there must also be a 'hvacMode' point
to determine which one is the true effective setpoint.  That setup should
look like this:

  - `hvacMode` `sp`
  - `temp` `effective` `cooling` `sp`
  - `temp` `effective` `heating` `sp`

In addition, we might also find the following points:

  - `pressure` `sensor`: measured static pressure of the space
  - `pressure` `sp`: static pressure setpoint (commonly used for lab situations)
  - `humidity` `sensor`: measured relative humidity of the space
  - `humidity` `sp`: setpoint for relative humidity
  - `dewPoint` `sensor`: measured dew point temperature of the space
  - `dewPoint` `sp`: setpoint for dew point temperature
  - `enthalpy` `sensor`: measured heat content of the space

All the points above must also be tagged with `zone`, `air`, and `point`.

Air Quality [#airQuality]
*************************
It is also common in an HVAC zone to also measure and control air quality.
We model the typical air quality points using the `airQualityZonePoints`
def which includes:

  - `ch2o-concentration` `sensor`: measured formaldehyde (CH₂O)
  - `co-concentration` `sensor`: measured carbon monoxide (CO)
  - `co2-concentration` `sensor`: measured carbon dioxide (CO₂)
  - `co2-concentration` `sp`: configured max carbon dioxide (CO₂)
  - `nh3-concentration` `sensor`: measured ammonia (NH₃)
  - `no2-concentration` `sensor`: measured nitrogen dioxide (NO₂)
  - `o3-concentration` `sensor`: measured ozone (O₃)
  - `pm01-concentration` `sensor`: measured particulate matter 0.1
  - `pm25-concentration` `sensor`: measured particulate matter 2.5
  - `pm10-concentration` `sensor`: measured particulate matter 10
  - `tvoc-concentration` `sensor`: measured total volatile organic compounds

All the points above must also be tagged with `zone`, `air`, and `point`.

Lighting [#lighting]
********************
The `lighting-zone-space` conjuct models lighting zones.  The `lightingZonePoints`
def enumerates the typical points used for lighting measurement and control
including:

  - `light-level` `sensor`: brightness level status as percentage
  - `light-level` `sp`: brightness level setpoint as percentage
  - `light` `illuminance` `sensor`: lux, footcandle, or phot
  - `light` `luminous-flux` `sensor`: luminous flux in lumens

